name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: read-all

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Lint code
        run: yarn run eslint .

      - name: Run type checks
        run: yarn run tsc --noEmit

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn run test

      - name: Upload test results to codecov
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          fail_ci_if_error: false
          report_type: test_results
          files: junit.xml
          flags: unit

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          fail_ci_if_error: false
          files: coverage/clover.xml
          flags: unit

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: yarn

      - name: Install deps
        run: yarn install --frozen-lockfile

      # https://github.com/microsoft/playwright/issues/7249
      - name: Store Playwright version as env
        run: |
          PLAYWRIGHT_VERSION="$(yarn run --silent playwright --version | cut -d' ' -f2)"
          echo "Playwright version is ${PLAYWRIGHT_VERSION}"
          echo "PLAYWRIGHT_VERSION=${PLAYWRIGHT_VERSION}" >> ${GITHUB_ENV}

      - name: Cache Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright browsers
        if: ${{ steps.cache-playwright-browsers.outputs.cache-hit != 'true' }}
        run: yarn run playwright install --with-deps

      - name: Build the application
        run: yarn run build

      - name: Run end-to-end tests
        run: yarn run e2e

      - name: Upload Playwright report to GitHub
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Upload Playwright report to S3
        id: upload-playwright-report-s3
        if: always()
        env:
          PLAYWRIGHT_REPORT_S3_PREFIX: playwright-report-${{ github.run_id }}
        run: |
          aws s3 cp --recursive \
            playwright-report/ \
            "s3://${{ vars.PLAYWRIGHT_REPORTS_BUCKET }}/${{ env.PLAYWRIGHT_REPORT_S3_PREFIX }}/"

          report_index_url="https://${{ vars.PLAYWRIGHT_REPORTS_BUCKET }}.s3.${{ vars.AWS_REGION }}.amazonaws.com/${{ env.PLAYWRIGHT_REPORT_S3_PREFIX }}/index.html"
          cat <<EOF | tee ./playwright-report.md $GITHUB_STEP_SUMMARY
          ðŸ“Š Playwright test report is now available at [here](${report_index_url})
          EOF

      - name: Comment on PR
        uses: thollander/actions-comment-pull-request@v3
        if: always() && steps.upload-playwright-report-s3.outcome == 'success' && github.event_name == 'pull_request'
        with:
          comment-tag: playwright-report
          file-path: ./playwright-report.md
